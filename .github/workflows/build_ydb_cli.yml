name: Build-YDB-CLI
run-name: Build YDB CLI ${{ inputs.version }}
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        default: ""
        description: "YDB CLI version (optional)"
      runner_label:
        type: string
        default: "auto-provisioned"
        description: "runner label"
      commit_sha:
        type: string
        default: ""
defaults:
  run:
    shell: bash

jobs:
  build-platform-specific-binary:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
    name: Build YDB CLI for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.commit_sha }}
    
    - name: Print uname
      run: uname -a
    
    - name: Print YDB CLI version
      run: cat ydb/apps/ydb/version.txt

    # - name: Build and test
    #   uses: ./.github/actions/build_and_test_ya
    #   with:
    #     build_preset: "release"
    #     build_target: "ydb/apps/ydb"
    #     increment: false
    #     run_tests: false
    #     put_build_results_to_cache: false
    #     additional_ya_make_args: "-DUSE_SSE4=no"
    #     secs: ${{ format('{{"TESTMO_TOKEN2":"{0}","AWS_KEY_ID":"{1}","AWS_KEY_VALUE":"{2}","REMOTE_CACHE_USERNAME":"{3}","REMOTE_CACHE_PASSWORD":"{4}"}}',
    #       secrets.TESTMO_TOKEN2, secrets.AWS_KEY_ID, secrets.AWS_KEY_VALUE, secrets.REMOTE_CACHE_USERNAME, secrets.REMOTE_CACHE_PASSWORD ) }}
    #     vars: ${{ format('{{"AWS_BUCKET":"{0}","AWS_ENDPOINT":"{1}","REMOTE_CACHE_URL":"{2}","TESTMO_URL":"{3}","TESTMO_PROJECT_ID":"{4}"}}',
    #       vars.AWS_BUCKET, vars.AWS_ENDPOINT, vars.REMOTE_CACHE_URL_YA, vars.TESTMO_URL, vars.TESTMO_PROJECT_ID ) }}

  gather-and-push-to-s3:
    name: Gather built binaries and push to s3
    needs: build-platform-specific-binary
    runs-on: ubuntu-latest
    steps:
      - name: Print result
        run: echo "all done"
